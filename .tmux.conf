# Use something easier to type as the prefix.
set -g prefix C-f
unbind C-b
bind C-f send-prefix

# Relax!
set -sg escape-time 0
set -sg repeat-time 600

# This is hilariously absurd.  How many nerds use tmux on OS X every day and
# it's still fundamentally broken?
set -g default-command "reattach-to-user-namespace -l zsh"
#set -g default-command "zsh"

# Less stretching to get to the first item.
set -g base-index 1
setw -g pane-base-index 1

# Reload the config.
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

unbind t
bind t run-shell 'wemux display_users'
# Saner splitting.
bind v split-window -h
bind s split-window -v
bind S choose-session \; run-shell 'sleep 5s; wemux summon'

# Pane movement
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Pane resizing
bind -r Left  resize-pane -L 2
bind -r Down  resize-pane -D 2
bind -r Up    resize-pane -U 2
bind -r Right resize-pane -R 2

# Window movement
bind -r , select-window -t :-
bind -r . select-window -t :+

# 256 colors please
set -g default-terminal "screen-256color"

# Bad Wolf
set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

# Custom status bar
# Powerline symbols: ⮂ ⮃ ⮀ ⮁ ⭤
set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5

set -g status-bg black
set -g status-fg white
set -g status-left-length 30
set -g status-right-length 60
set -g status-left ' #[default]'
set -g status-right '#(~/.bin/batteryHearts.sh) #[fg=colour198]%H:%M#[default]'
setw -g window-status-format '#[fg=colour235]#I #[fg=white]#W#[default]  '
#FIXME: I want to be able to use: ⮁
setw -g window-status-current-format '#[bg=white,fg=black]⮀ #W #[bg=black,fg=white]⮀'
# Activity
setw -g monitor-activity on
set -g visual-activity off

# Autorename sanely.
setw -g automatic-rename on

# Better name management
bind c new-window \; command-prompt "rename-window '%%'"
bind C new-window
bind , command-prompt "rename-window '%%'"

# Copy mode
setw -g mode-keys vi
bind [ copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
